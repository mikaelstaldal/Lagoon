<!-- Ant build file for Lagoon -->
<!-- You need Apache Ant, version 1.4.1 or later, to use it -->
<!-- Get it from http://jakarta.apache.org/ant/ -->

<!-- Assumes that you have support for JAXP 1.1, 
     e.g. Apache Xerces and Xalan, in your CLASSPATH -->

<project name="Lagoon" default="lagoon">

  <!-- Change these to match your system, 
  	   or override with -D command line options -->
  <property name="JUnit" value="C:\javaInstall\JUnit\junit.jar"/>
  <property name="JLex" value="C:\javaInstall\JLex"/>
  <property name="FOP" value="C:\javaInstall\fop\fop.jar"/>
  <property name="Batik" value="C:\javaInstall\batik\lib"/>
  <property name="Ant" value="C:\javaInstall\ant\lib\ant.jar"/>
  <property name="JAF" value="C:\javaInstall\jaf\activation.jar"/>
  <property name="JARV" value="C:\javaInstall\isorelax.jar"/>

  <path id="lagoon.class.path">
    <pathelement location="${Ant}" />
    <pathelement location="${FOP}" />
    <fileset dir="${Batik}">
        <include name="*.jar"/>
    </fileset>
  </path>


  <property name="Name" value="Lagoon"/>
  <property name="name" value="lagoon"/>
  <property name="version" value="1.0b14"/>
  <property name="ver" value="10b14"/>

  <property name="res.dir" value="resource"/>
  <property name="src.dir" value="src"/>
  <property name="src.testsuite" value="testsuite"/>
  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="dist"/>
  <property name="dist.jars" value="${dist.dir}"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="build.testsuite" value="${build.dir}/testsuite"/>

  <property name="manifest" value="src/lagoon.mf"/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build.classes}"/>
    <mkdir dir="${build.testsuite}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.jars}"/>
    <uptodate property="lexer.notRequired"
    		  targetfile="${basedir}/${src.dir}/nu/staldal/lsp/expr/LSPExprLexer.java">
		<srcfiles dir="${basedir}/${src.dir}"
        		  includes="nu/staldal/lsp/expr/LSPExprLexer.lex"/>
    </uptodate>
  </target>

  
  <target name="lagoon" depends="init,xmlutil,lexer"
  	description="Compiles Lagoon">
    <javac srcdir="${src.dir}"
    	   includes="nu/staldal/lagoon/**/*,nu/staldal/lsp/**/*,nu/staldal/syntax/**/*"
           destdir="${build.classes}"
           optimize="off" debug="on">
    	<classpath refid="lagoon.class.path"/>
	</javac>           

    <copy todir="${build.classes}">
      <fileset dir="${src.dir}">
        <include name="nu/staldal/lagoon/**/*" />
        <include name="nu/staldal/lsp/**/*" />
        <include name="nu/staldal/syntax/**/*" />
        <exclude name="**/*.java" />
        <exclude name="**/*.lex" />
      </fileset>
    </copy>

    <filter token="NAME" value="${Name}" />
    <filter token="VERSION" value="${version}" />
    <filter token="DATE" value="${DSTAMP}" />
    <copy file="version.txt" todir="${build.classes}" 
          filtering="on"/>
    <jar jarfile="${dist.jars}/${name}.jar"
         manifest="${manifest}">
      <fileset dir="${build.classes}"> 
    	 <include name="*"/>
    	 <include name="nu/staldal/lagoon/**/*"/>
    	 <include name="nu/staldal/syntax/**/*"/>
    	 <include name="nu/staldal/lsp/**/*"/>
      </fileset>
      <fileset dir="${res.dir}"/>
    </jar>

  </target>


  <target name="xmlutil" depends="init"
  	description="Compiles XML Utils">
    <javac srcdir="${src.dir}"
    	   includes="nu/staldal/xtree/**/*,nu/staldal/xmlutil/**/*,nu/staldal/ftp/**/*"
           destdir="${build.classes}"
           optimize="off" debug="on">
    	<classpath>
            <pathelement location="${JAF}" />
            <pathelement location="${JARV}" />
        </classpath>
	</javac>

    <copy todir="${build.classes}">
      <fileset dir="${src.dir}">
        <include name="nu/staldal/xtree/**/*" />
        <include name="nu/staldal/xmlutil/**/*" />
        <include name="nu/staldal/ftp/**/*" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>

    <jar jarfile="${dist.jars}/xmlutil.jar">
         <!-- manifest="${manifest}" -->
      <fileset dir="${build.classes}"> 
    	 <include name="nu/staldal/xtree/**/*"/>
    	 <include name="nu/staldal/xmlutil/**/*"/>
    	 <include name="nu/staldal/ftp/**/*"/>
      </fileset>	 
    </jar>
  </target>


  <target name="lexer" unless="lexer.notRequired">
    <java classname="JLex.Main">
    	<classpath>
            <pathelement location="${JLex}" />
        </classpath>
      <arg value="${basedir}/${src.dir}/nu/staldal/lsp/expr/LSPExprLexer.lex"/>
    </java>
    <move file="${basedir}/${src.dir}/nu/staldal/lsp/expr/LSPExprLexer.lex.java"
    	  tofile="${basedir}/${src.dir}/nu/staldal/lsp/expr/LSPExprLexer.java"/>
  </target>


  <target name="testsuite" depends="init,xmlutil,lagoon"
  	description="Compiles testsuite">
    <javac srcdir="${src.testsuite}"
    	   includes="nu/staldal/**/*"
           destdir="${build.testsuite}"
           optimize="off">
    	<classpath>
            <pathelement location="${JUnit}" />
            <pathelement location="${build.classes}" />
        </classpath>
    </javac>

    <copy todir="${build.testsuite}">
      <fileset dir="${src.testsuite}">
        <include name="nu/staldal/**/*" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>


  <target name="docs" depends="init" 
  	description="Creates the documentation">
  	<copy todir="${dist.dir}/docs">
      <fileset dir="docs"/>
    </copy>
    <mkdir dir="${dist.dir}/docs/javadoc"/>
    <javadoc packagenames="nu.staldal.lagoon.core,nu.staldal.lagoon.util,nu.staldal.xtree,nu.staldal.lsp,nu.staldal.syntax,nu.staldal.xmlutil,nu.staldal.ftp"
    	     sourcepath="${src.dir}"
             destdir="${dist.dir}/docs/javadoc"
             author="true"
             version="true"
             windowtitle="${Name} API"
             doctitle="${Name}" />
  </target>


  <target name="dist" depends="lagoon,docs"
  		  description="Builds the distribution">
    <filter token="NAME" value="${Name}" />
    <filter token="VERSION" value="${version}" />
    <filter token="DATE" value="${DSTAMP}" />
    <copy file="README" todir="${dist.dir}" 
          overwrite="true"
          filtering="on"/>
    <copy file="LICENSE" todir="${dist.dir}" />
    <copy file="HISTORY" todir="${dist.dir}" />
  	<copy todir="${dist.dir}/bin">
      <fileset dir="bin"/>
    </copy>

    <zip zipfile="${name}${ver}.zip"
    	 basedir="${dist.dir}" />
  </target>


  <target name="clean" description="Remove built files">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

</project>
